apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: "kotlin-jpa"
//apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'propdeps'
apply plugin: 'propdeps-idea'


repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

dependencies {
	compile("org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}")
	compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
	compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
	compile('javax.inject:javax.inject:1')
	compile('javax.persistence:javax.persistence-api:2.2')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.thymeleaf.extras:thymeleaf-extras-springsecurity4')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile("org.hibernate:hibernate-search-orm:${hibernateVersion}")
	compile('org.springframework.boot:spring-boot-starter-validation')
	compile('org.springframework.boot:spring-boot-starter-mail')
	compile('org.springframework.boot:spring-boot-starter-cache')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile("org.springframework.social:spring-social-security")
	compile("org.springframework.security:spring-security-acl")
//	compile("org.springframework.security:spring-security-jwt")
	compile("com.github.spring-social:spring-social-google:${socialGoogleVersion}")
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-devtools')
	compile('org.springframework.data:spring-data-envers')
	compile("org.flywaydb:flyway-core:${flywaydbVersion}")
	runtime("org.mariadb.jdbc:mariadb-java-client:${mariadbVersion}")
	testCompile("junit:junit:${junitVersion}")
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
	optional('org.springframework.boot:spring-boot-configuration-processor')
}

compileJava.dependsOn(processResources)
